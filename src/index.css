@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* CodeHelp Design System - Dark Mode First */
    --background-dark: 226 28% 7%;
    --background-light: 0 0% 100%;
    --surface-dark: 220 13% 18%;
    --surface-dark-1: 217 19% 11%;
    --surface-dark-2: 215 25% 17%;
    
    /* Primary Purple Palette */
    --primary: 252 83% 68%;
    --primary-dark: 252 83% 53%;
    --primary-light: 252 83% 78%;
    --primary-foreground: 0 0% 100%;
    
    /* Functional Colors */
    --success: 142 71% 45%;
    --error: 0 84% 60%;
    --warning: 45 93% 47%;
    
    /* Accent Colors */
    --accent-red: 0 84% 60%;
    --accent-green: 158 64% 52%;
    --accent-orange: 45 93% 47%;
    
    /* Text Colors */
    --text-light-primary: 0 0% 100%;
    --text-light-secondary: 220 9% 82%;
    --text-dark-primary: 215 25% 17%;
    
    /* Grays */
    --gray-1: 220 9% 68%;
    --gray-2: 215 14% 34%;
    --gray-3: 215 19% 25%;
    
    /* Design System Mapping */
    --background: var(--background-dark);
    --foreground: var(--text-light-primary);
    --card: var(--surface-dark);
    --card-foreground: var(--text-light-primary);
    --popover: var(--surface-dark-1);
    --popover-foreground: var(--text-light-primary);
    --secondary: var(--surface-dark-2);
    --secondary-foreground: var(--text-light-primary);
    --muted: var(--surface-dark-2);
    --muted-foreground: var(--text-light-secondary);
    --accent: var(--surface-dark-2);
    --accent-foreground: var(--text-light-primary);
    --destructive: var(--error);
    --destructive-foreground: var(--text-light-primary);
    --border: var(--gray-3);
    --input: var(--surface-dark-2);
    --ring: var(--primary);
    --radius: 0.5rem;
    
    /* Animation Variables */
    --glow-primary: 252 83% 68%;
    --glow-secondary: 252 83% 78%;
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-spring: all 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
  }

  .light {
    --background: var(--background-light);
    --foreground: var(--text-dark-primary);
    --card: var(--background-light);
    --card-foreground: var(--text-dark-primary);
    --popover: var(--background-light);
    --popover-foreground: var(--text-dark-primary);
    --secondary: 220 9% 96%;
    --secondary-foreground: var(--text-dark-primary);
    --muted: 220 9% 96%;
    --muted-foreground: var(--gray-2);
    --accent: 220 9% 96%;
    --accent-foreground: var(--text-dark-primary);
    --border: 220 9% 89%;
    --input: 220 9% 96%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-sans antialiased;
  }
  
  html {
    scroll-behavior: smooth;
  }
}

@layer components {
  /* Glowing Border Animation */
  .glow-border {
    position: relative;
    overflow: hidden;
  }
  
  .glow-border::before {
    content: '';
    position: absolute;
    inset: 0;
    padding: 2px;
    background: linear-gradient(45deg, 
      hsl(var(--glow-primary)), 
      hsl(var(--glow-secondary)), 
      hsl(var(--glow-primary))
    );
    background-size: 300% 300%;
    border-radius: inherit;
    opacity: 0;
    animation: glow-rotate 3s ease-in-out infinite;
    transition: opacity 0.3s ease;
    z-index: -1;
  }
  
  .glow-border:hover::before,
  .glow-border.animate::before {
    opacity: 1;
  }
  
  .glow-border > * {
    position: relative;
    z-index: 1;
    border-radius: inherit;
  }
  
  /* Hero gradient text */
  .gradient-text {
    background: linear-gradient(135deg, 
      hsl(var(--primary)), 
      hsl(var(--primary-light))
    );
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
  
  /* Underline animation */
  .underline-animate {
    position: relative;
    display: inline-block;
  }
  
  .underline-animate::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 2px;
    bottom: -4px;
    left: 0;
    background: linear-gradient(90deg, 
      hsl(var(--primary)), 
      hsl(var(--primary-light))
    );
    transform: scaleX(0);
    transform-origin: bottom right;
    transition: transform 0.3s ease;
  }
  
  .underline-animate:hover::after {
    transform: scaleX(1);
    transform-origin: bottom left;
  }
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

@keyframes glow-rotate {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}